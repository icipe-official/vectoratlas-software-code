# This is a default site configuration which will simply return 404, preventing
# chance access to any other virtualhost.
error_log /dev/stdout debug;

proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=mapcache:10m max_size=50m inactive=60m;

server {
    rewrite_log on;
    listen 80 default_server;
    listen [::]:80 default_server;

    # Frontend
    location / {
        proxy_pass http://ui:3000/; # same name as network alias
    }

    # Analytics
    location /analytics {
        proxy_pass http://analytics:3000;
        proxy_buffering on;
        proxy_http_version 1.1;
        proxy_ssl_session_reuse off;
        proxy_ssl_server_name on;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_protocol_addr;
        proxy_set_header X-Forwarded-Host  $host;
    }

    # Help
    location /help {
        rewrite ^/help(.*)$ /$1 break;
        proxy_pass http://help:80/;
    }

    # Backend
    location /vector-api {
        rewrite ^/vector-api(.*)$ $1 break;
        proxy_pass http://api:3001/;
    }

    location ~* \/data\/.+\.(?:png|pbf)$ {
        expires 1h;
        add_header Vary Accept-Encoding;
        access_log off;

        proxy_cache       mapcache;
        add_header X-Cache-Status $upstream_cache_status;
        proxy_cache_valid any 10m;
        proxy_pass http://tileserver:80;
    }

    location /data {
        proxy_pass http://tileserver:80;
    }

    # You may need this to prevent return 404 recursion.
    location = /404.html {
        internal;
    }
}