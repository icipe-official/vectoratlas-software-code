version: '3.8'
services:
  blob-storage:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - '10000:10000'
      - '10001:10001'
      - '10002:10002'
    volumes:
      - ./blob-storage-emulator:/data
    networks:
      - va-network
  db:
    build:
      context: ../Database
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespass
      - POSTGRES_DB=mva
    networks:
      - va-network
  db-migrations:
    build:
      context: ../API
      dockerfile: Dockerfile
    entrypoint: ["npm", "run", "migrations:runallprod"]
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespass
      - POSTGRES_HOST=db
      - POSTGRES_DB=mva
    depends_on:
      - db
    links:
      - db:db
    networks:
      - va-network
  api:
    build:
      context: ../API
      dockerfile: Dockerfile
    entrypoint: [ "node", "dist/main.js" ]
    volumes:
    - ../API/public:/usr/src/app/dist/public
    - ../API/public:/etc/vector-atlas/api
    - ../TileServer/data:/data
    ports:
      - "3001:3001"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespass
      - POSTGRES_HOST=db
      - POSTGRES_DB=mva
      - PUBLIC_FOLDER=/usr/src/app/dist
      - CONFIG_FOLDER=/etc/vector-atlas/api
      - AUTH0_ISSUER_URL=https://dev-326tk4zu.us.auth0.com/
      - AUTH0_AUDIENCE=https://www.vectoratlas.org
      - TOKEN_KEY=FM8Lv6SUxApnVqgu54mhR04lzaw=
      - TILESERVER_DATA_FOLDER=/data/
      - OVERLAY_BLOB_FOLDER=/data/blobStore/
      - AZURE_STORAGE_CONNECTION_STRING='DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://blob-storage:10000/devstoreaccount1;'
      - EMAIL_PASSWORD=$EMAIL_PASSWORD
      - ADMIN_EMAIL=<your_email>
    depends_on:
    depends_on:
      - db
      - db-migrations
    links:
      - db:db
    networks:
      - va-network
  ui:
    build:
      context: ../UI
      dockerfile: Dockerfile
    entrypoint: ['node', 'server.js']
    environment:
      - API_URL=api
      - NEXT_PUBLIC_TOKEN_KEY=FM8Lv6SUxApnVqgu54mhR04lzaw=
      - NEXT_PUBLIC_AUTH_ENDPOINT='http://api:3001/auth/token'
    ports:
      - '3000:3000'
    depends_on:
      - api
    links:
      - api:api
    networks:
      - va-network
  help:
    build:
      context: ../Help
      dockerfile: Dockerfile
    ports:
      - "3003:80"
    networks:
      - va-network
    entrypoint: ['nginx', '-g', 'daemon off;']
  tileserver:
    build:
      context: ../TileServer
      dockerfile: Dockerfile
    ports:
      - '8080:80'
    volumes:
      - ../TileServer/data:/data
    networks:
      - va-network
  analytics:
    build:
      context: ./umami
      dockerfile: Dockerfile
      args:
        - BASE_PATH=/analytics
    ports:
      - "3004:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgrespass@db:5432/umami
      DATABASE_TYPE: postgresql
      BASE_PATH: /analytics
    depends_on:
      - db
    links:
      - db:db
    restart: always
    networks:
      - va-network
  nginx-proxy:
    depends_on:
      - ui
      - api
      - help
      - tileserver
      - analytics
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 1234:80
    networks:
      - va-network
networks:
  va-network: