version: '3.8'
services:
  # db:
  #   build:
  #     context: ../Database
  #     dockerfile: Dockerfile
  #   restart: always
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgrespass
  #     - POSTGRES_DB=mva
  #   networks:
  #     - va-network
  api:
    build:
      context: ../API
      dockerfile: Dockerfile
    entrypoint: [ "node", "dist/src/main.js" ]
    restart: always
    environment:
      - POSTGRES_USER=$VA_DB_USER
      - POSTGRES_PASSWORD=$VA_DB_PASSWORD
      - POSTGRES_HOST=vectoratlas-db.postgres.database.azure.com
      - POSTGRES_DB=postgres
      - DB_ENCRYPT_CONNECTION=true
      - PUBLIC_FOLDER=/usr/src/app/dist
    # depends_on:
    #   - db
    # links:
    #   - db:db
    networks:
      - va-network
  ui:
    build:
      context: ../UI
      dockerfile: Dockerfile
    entrypoint: ['node', 'server.js']
    restart: always
    environment:
      - API_URL=api
    depends_on:
      - api
    links:
      - api:api
    networks:
      - va-network
  help:
    build:
      context: ../Help
      dockerfile: Dockerfile
    networks:
      - va-network
    entrypoint: ['nginx', '-g', 'daemon off;']
    restart: always
  tileserver:
    image: maptiler/tileserver-gl
    volumes:
      - ../TileServer/data:/data 
    networks:
      - va-network
    restart: always
  nginx-proxy:
    depends_on:
      - ui
      - api
      - help
      - tileserver
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
    networks:
      - va-network
    restart: always
networks:
  va-network: