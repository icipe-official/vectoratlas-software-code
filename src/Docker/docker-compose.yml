version: '3.8'
services:
  db-migrations:
    build:
      context: ../API
      dockerfile: Dockerfile
    entrypoint: ["npm", "run", "migrations:runallprod"]
    environment:
      - POSTGRES_USER=$VA_DB_USER
      - POSTGRES_PASSWORD=$VA_DB_PASSWORD
      - POSTGRES_HOST=vectoratlas-db.postgres.database.azure.com
      - POSTGRES_DB=postgres
      - DB_ENCRYPT_CONNECTION=true
    networks:
      - va-network
  api:
    build:
      context: ../API
      dockerfile: Dockerfile
    entrypoint: [ "node", "dist/main.js" ]
    restart: always
    volumes:
    - ../API/public:/usr/src/app/dist/public
    - /etc/vector-atlas/api:/etc/vector-atlas/api
    environment:
      - POSTGRES_USER=$VA_DB_USER
      - POSTGRES_PASSWORD=$VA_DB_PASSWORD
      - POSTGRES_HOST=vectoratlas-db.postgres.database.azure.com
      - POSTGRES_DB=postgres
      - DB_ENCRYPT_CONNECTION=true
      - PUBLIC_FOLDER=/usr/src/app/dist
      - CONFIG_FOLDER=/etc/vector-atlas/api
      - AUTH0_ISSUER_URL=https://dev-326tk4zu.us.auth0.com/
      - AUTH0_AUDIENCE=https://www.vectoratlas.org
      - TOKEN_KEY=$VA_TOKEN_SECRET
    depends_on:
      - db-migrations
    networks:
      - va-network
  ui:
    build:
      context: ../UI
      dockerfile: Dockerfile
    entrypoint: ['node', 'server.js']
    restart: always
    environment:
      - API_URL=api
      - NEXT_PUBLIC_TOKEN_KEY=$VA_TOKEN_SECRET
      - NEXT_PUBLIC_AUTH_ENDPOINT='http://api:3001/auth/token'
    depends_on:
      - api
    links:
      - api:api
    networks:
      - va-network
  help:
    build:
      context: ../Help
      dockerfile: Dockerfile
    networks:
      - va-network
    entrypoint: ['nginx', '-g', 'daemon off;']
    restart: always
  tileserver:
    image: maptiler/tileserver-gl:v4.1.2
    volumes:
      - ../TileServer/data:/data
    networks:
      - va-network
    restart: always
  analytics:
    build:
      context: ./umami
      dockerfile: Dockerfile
      args:
        - BASE_PATH=/analytics
    environment:
      DATABASE_URL: $VA_DB_URL
      DATABASE_TYPE: postgresql
      BASE_PATH: /analytics
    depends_on:
      - db
    links:
      - db:db
    restart: always
    networks:
      - va-network
  nginx-proxy:
    depends_on:
      - ui
      - api
      - help
      - tileserver
      - analytics
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 3000:80
    networks:
      - va-network
    restart: always
networks:
  va-network: