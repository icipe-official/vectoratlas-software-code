version: '3.8'
services:
  blob-storage:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - '10000:10000'
      - '10001:10001'
      - '10002:10002'
    volumes:
      - ./blob-storage-emulator:/data
    networks:
      - va-network
  db:
    build:
      context: ../Database
      dockerfile: Dockerfile
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespass
      - POSTGRES_DB=mva
    ports:
      - '5432:5432'
    networks:
      - va-network
  db-migrations:
    build:
      context: ../API
      dockerfile: Dockerfile
    entrypoint: ["npm", "run", "migrations:runallprod"]
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespass
      - POSTGRES_HOST=db
      - POSTGRES_DB=mva
    depends_on:
      - db
    links:
      - db:db
    networks:
      - va-network
  tileserver:
    build:
      context: ../TileServer
      dockerfile: Dockerfile
    ports:
      - '8080:80'
    volumes:
      - ../TileServer/data:/data
    networks:
      - va-network
  analytics:
    build:
      context: ./umami
      dockerfile: Dockerfile
      args:
        - BASE_PATH=/analytics
    ports:
      - '3003:3000'
    environment:
      BASE_PATH: /analytics
      DATABASE_URL: postgresql://postgres:postgrespass@db:5432/umami
      DATABASE_TYPE: postgresql
    depends_on:
      - db
    links:
      - db:db
    restart: always
    networks:
      - va-network
  python-backend:
    restart: unless-stopped
    build: 
      context: ../PythonBackend/
      dockerfile: Dockerfile 
    ports:
      - 8090:8000
    depends_on:
      - db
    links:
      - db:db
    networks:
      - va-network
networks:
  va-network: