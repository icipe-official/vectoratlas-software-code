# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""bionomics data"""
type Bionomics {
  adult_data: Boolean
  contact_authors: Boolean
  contact_notes: String
  control: String
  control_notes: String
  data_abstracted_by: String
  data_checked_by: String
  insecticide_control: Boolean
  itn_use: Boolean
  larval_site_data: Boolean
  month_end: Int
  month_start: Int
  season_calc: String
  season_given: String
  season_notes: String
  secondary_info: String
  study_sampling_design: String
  timestamp_end: DateTime
  timestamp_start: DateTime
  year_end: Int
  year_start: Int
}

input CreateReferenceInput {
  author: String!
  citation: String!
  journal_title: String!
  published: Boolean!
  report_type: String!
  v_data: Boolean!
  year: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Geometry scalar type"""
scalar GeoJSONPoint

type Mutation {
  createReference(input: CreateReferenceInput!): Reference!
}

"""occurrence data"""
type Occurrence {
  dec_check: String
  dec_id: String
  map_check: String
  month_end: Int
  month_start: Int
  recorded_species: RecordedSpecies!
  sample: Sample!
  site: Site!
  timestamp_end: DateTime
  timestamp_start: DateTime
  vector_notes: String
  year_end: Int
  year_start: Int
}

input OccurrenceFilter {
  control: Boolean
  country: String
  endTimestamp: Float
  isAdult: Boolean
  isLarval: Boolean
  season: String
  species: String
  startTimestamp: Float
}

type PaginatedOccurrenceData {
  hasMore: Boolean!
  items: [Occurrence!]!
  total: Int!
}

type PaginatedReferenceData {
  hasMore: Boolean!
  items: [Reference!]!
  total: Int!
}

type Query {
  OccurrenceData(filters: OccurrenceFilter, skip: Float = 0, take: Float = 1): PaginatedOccurrenceData!
  allGeoData: [Occurrence!]!
  allReferenceData(order: String = "asc", orderBy: String = "num_id", skip: Float = 0, take: Float = 1): PaginatedReferenceData!
  geoData(id: String!): Occurrence!
  referenceData(id: String!): Reference!
  userRole(id: String!): UserRole!
}

"""recorded species data"""
type RecordedSpecies {
  assi: Boolean
  assi_notes: String
  id_method_1: String
  id_method_2: String
  id_method_3: String
  species: Species!
  species_notes: String
  ss_sl: String
}

"""reference data"""
type Reference {
  article_title: String
  author: String
  citation: String
  journal_title: String
  num_id: Int!
  published: Boolean
  report_type: String
  v_data: Boolean
  year: Int
}

"""sample data"""
type Sample {
  control: Boolean
  control_type: String!
  mossamp_tech_1: String!
  mossamp_tech_2: String!
  mossamp_tech_3: String!
  mossamp_tech_4: String!
  n_1: Int
  n_2: Int
  n_3: Int
  n_4: Int
  n_all: Int
}

"""site data"""
type Site {
  admin_1: String
  admin_2: String
  admin_2_id: Int
  admin_3: String
  admin_level: Int
  area_type: String
  bad_guess: Boolean
  country: String!
  gaul_code: Int
  georef_notes: String
  georef_source: String
  good_guess: Boolean
  is_forest: Boolean
  is_rice: Boolean
  latitude: String
  latitude_2: String
  latlong_source: String
  location: GeoJSONPoint!
  location_2: GeoJSONPoint
  longitude: String
  longitude_2: String
  map_site: Int
  name: String!
  rural_urban: String
  site_notes: String
}

"""constant species data"""
type Species {
  complex: String
  section: String
  series: String!
  species: String
  species_author: String
  subgenus: String!
  year: Int
}

"""user role data"""
type UserRole {
  auth0_id: String!
  is_admin: Boolean
  is_editor: Boolean
  is_reviewer: Boolean
  is_uploader: Boolean
}